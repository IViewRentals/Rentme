<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.example.rentsummary.dao.UserDAO">
    
    <resultMap id="UserMap" type="UserEntity">
        <id property="id" column="id"/>
        <result property="account" column="account"/>
        <result property="password" column="password"/>
        <result property="phone" column="phone"/>
        <result property="email" column="email"/>
        <result property="cityId" column="city_id"/>
        <result property="baseSearch" column="base_search"/>
        <result property="hidTypeValue" column="hid_type_val"/>
        <result property="searchInputPageTxt" column="search_input_text"/>
        <result property="searchInputValue" column="search_input_val"/>
        <result property="emailCode" column="email_code"/>
    </resultMap>

    <!-- 用户登录 -->
    <select id="login" parameterType="UserEntity" resultType="UserEntity">
        select * from users
        <where>
            1=1
            <if test="account!=null and account!=''">
                and account=#{account}
            </if>
            <if test="password!=null and password!=''">
                and password=#{password}
            </if>
        </where>
    </select>

    <!-- 用户注册 -->
    <insert id="register" parameterType="UserEntity">
        insert into users
        <trim prefix="(" suffix=")" suffixOverrides=",">
            <if test="account != null"> account, </if>
            <if test="password != null"> password, </if>
            <if test="phone != null"> phone, </if>
            <if test="email != null"> email, </if>
            <if test="cityId != 0"> city_id, </if>
            <if test="emailCode != null"> email_code, </if>
        </trim>
        values
        <trim prefix="(" suffix=")" suffixOverrides=",">
            <if test="account != null"> #{account}, </if>
            <if test="password != null"> #{password}, </if>
            <if test="phone != null"> #{phone}, </if>
            <if test="email != null"> #{email}, </if>
            <if test="cityId != 0"> #{cityId}, </if>
            <if test="emailCode != null"> #{emailCode}, </if>
        </trim>
    </insert>

    <!-- 修改密码 -->
    <update id="updatePasswordByAccount" parameterType="UserEntity">
        update users set password=#{password} where account=#{account}
    </update>

    <!-- 根据账户名清除邮箱验证码 -->
    <update id="clearUserEmailCode" parameterType="UserEntity" >
        update users set email_code=null where account=#{account}
    </update>

    <!-- 根据邮箱查找用户并存入验证码 -->
    <update id="updateEmailCodeByEmail" parameterType="UserEntity" >
        update users set email_code=#{emailCode} where email=#{email}
    </update>

    <!-- 删除临时记录 -->
    <delete id="clearCode" parameterType="UserEntity">
        delete from users where email=#{email} and account is null
    </delete>

    <!-- 根据邮箱验证码查询用户 -->
    <select id="getUserByEmailCode" parameterType="UserEntity" resultMap="UserMap">
        select * from users where email_code=#{emailCode} and email=#{email}
    </select>

    <!-- 查询邮箱是否存在 -->
    <select id="getUserByEmail" resultType="UserEntity" parameterType="String" >
        select * from users where email=#{email}
    </select>

    <!-- 获取所有的州 -->
    <select id="getState" resultType="StateEntity">
        select * from state
    </select>

    <!-- 根据州查询城市 -->
    <select id="getCityById" parameterType="Integer" resultType="CityEntity">
        select * from city where state_id=#{id}
    </select>

    <!-- 根据城市查询区域 -->
    <select id="getAreaById" parameterType="Integer" resultType="AreaEntity">
        select * from area where city_id=#{id}
    </select>

    <update id="addUserHistory" parameterType="UserEntity">
        update users set base_search=#{baseSearch},search_input_val=#{searchInputValue},
        search_input_text=#{searchInputPageTxt},hid_type_val=#{hidTypeValue} where id=#{id}
    </update>

    <!--根据用户ID查询用户-->
    <select id="getUserById" parameterType="Integer" resultMap="UserMap" >
        select * from users where id=#{id}
    </select>

    <!--根据账号查询用户-->
    <select id="getUserByAccount" parameterType="String" resultType="UserEntity">
        select * from users where account = #{account}
    </select>


</mapper>